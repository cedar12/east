name: Release Plugin Web ALL

on:
  workflow_dispatch:

jobs:
  build-mac-release:
    runs-on: macos-11
    permissions:
      contents: write
      pull-requests: read
    strategy:
      matrix:
        arch:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
  
      - name: Install and Build
        run: cd plugin_actix/web && yarn && yarn build && cd ../../

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.arch }}
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.arch }} --package plugin_actix

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.arch }}
          path: target/${{ matrix.arch }}/release/*.dylib
        
      - run: zip -j plugin_actix_${{ matrix.arch }} target/${{ matrix.arch }}/release/*.dylib
    
      - name: Release Drafter
        id: create_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: plugin_actix_${{ matrix.arch }}.zip
          asset_name: plugin_actix_${{ matrix.arch }}.zip
          asset_content_type: application/zip

  build-windows-release:
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: read
    strategy:
      matrix:
        arch:
          - x86_64-pc-windows-msvc        
          - i686-pc-windows-msvc

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup node
        uses: actions/setup-node@v1
        with:
            node-version: '14.x'
    
      - name: Install and Build
        run: cd plugin_actix/web && yarn && yarn build && cd ../../
        
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.arch }}
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.arch }} --package plugin_actix

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.arch }}
          path: target/${{ matrix.arch }}/release/*.dll

      - run: copy target/${{ matrix.arch }}/release/*.dll ./

      - uses: thedoctor0/zip-release@0.7.1
        with:
          type: zip
          filename: plugin_actix_${{ matrix.arch }}.zip
          path: ./*.dll
    
      - name: Release Drafter
        id: create_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: plugin_actix_${{ matrix.arch }}.zip
          asset_name: plugin_actix_${{ matrix.arch }}.zip
          asset_content_type: application/zip

  build-linux-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    strategy:
      matrix:
        arch:
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
          - mips-unknown-linux-musl
          - mips-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
            node-version: '14.x'
    
      - name: Install and Build
        run: cd plugin_actix/web && yarn && yarn build && cd ../../
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo install cross --git https://github.com/cross-rs/cross
      - run: cross build --release --target ${{ matrix.arch }}  --package plugin_actix 
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.arch }}
          path: target/${{ matrix.arch }}/release/*.so
      - run: zip -j plugin_actix_${{ matrix.arch }} target/${{ matrix.arch }}/release/*.so
    
      - name: Release Drafter
        id: create_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: plugin_actix_${{ matrix.arch }}.zip
          asset_name: plugin_actix_${{ matrix.arch }}.zip
          asset_content_type: application/zip
